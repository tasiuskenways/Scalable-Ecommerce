name: Pull Request CI

on:
  pull_request:
    branches:
      - master

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, product, order] # list all your services here

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        working-directory: ${{ matrix.service }}-service
        run: go mod tidy

      - name: Run Linter
        working-directory: ${{ matrix.service }}-service
        run: golangci-lint run ./...

      - name: Run Tests
        working-directory: ${{ matrix.service }}-service
        run: go test ./... -v -coverprofile=coverage.out

  security-scan:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event.pull_request.draft == false # skip for draft PRs
    strategy:
      matrix:
        service: [user, product, order]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Gosec Scan
        working-directory: ${{ matrix.service }}-service
        run: $HOME/go/bin/gosec ./...
